import "@stdlib/deploy";

// Числа только целые, не дробные
contract Integers with Deployable {
    // integer (+ и -)
    i1: Int as int257 = 1000; // от 2^256 до 2^256      cost 0.184 TON в год
    // unsigned integer (беззнаковое целое - только положительное: 0 и >)
    i2: Int as uint256; // от 0 до 2^256
    i3: Int as int32 = 1000; // cost 0.023 TON в год
    i5: Int as int128;
    i6: Int as coins; // от 0 до 2^120 - для записи баланса TON
    i7: Int as int8;
    // Все числа в init сохраняются и надо платить аренду
    init(){
        self.i2 = 0x83df;
        self.i5 = pow(10, 9); // 10^9 = 1,000,000,000
        self.i6 = ton("1.23"); // так работают с балансами в смарт-контракте. 9 decimal 1,230,000,000
        self.i7 = (self.i3 + 200);
    }

    // Все числа - временные, объявленные здесь, не будут храниться в storage.
    // Они удалятся после выполнения логики контракта
    receive(){
        let int1: Int = 30001;
        let int2: Int = 57;
        let i: Int = -(12);
        // Деление в tact всегда округляется в наименьшую сторону

        // Битовые сдвиги
        i = int1 >> 3; // 375
        i = int1 << 2; // 12004

        // + - / * % min(1, 2) max(1,2) abs(1) == > >= !==
    }
}
